[package]
name = "zero2prod"
version = "0.1.0"
edition = "2021"
authors = ["Luca Palmieri <contact@lpalmierei.com",  "Tiffany-Morrigan Henebury <tiffsisstracker@gmail.com>"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# any path can be used
# library name can be specified with 'name' field.
# otherwise defaults to 'package.name'
path = "src/lib.rs"

[[bin]]
# double brackets - an array in TOML syntax
# only ever hace one lib per project, but can have multiple binaries!
# to manage multiple libraries in the same repo, look at the
# workspace feature
path = "src/main.rs"
name = "zero2prod"

[dev-dependencies]
# only included in tests or examples, not in final app binary
once_cell = "1"
reqwest = "0.11"

[dependencies]
actix-web = "4.0.0"
config = "0.11"
env_logger = "0.9"
log = "0.4"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
tracing = { versio = "0.1", features = ["log"] }
tracing-actix-web = "0.5"
tracing-bunyan-formatter = "0.3"
tracing-log = "0.1"
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
secrecy = { version = "0.8", features = ["serde"] }
serde = { version = "1", features = ["derive"] }
uuid = { version = "0.8.1", features = ["v4"] }
chrono = "0.4.15"

# table-like toml to modularise
[dependencies.sqlx]
version = "0.5.7"
default-features = false
features = [
    "runtime-actix-rustls", # actix runtime for futures, rustls as tls backend
    "macros", # actix to sqlx::query! & sqlx::query_as!
    "postgres", # postgres functionality for non-standard types
    "uuid", # uuid for mapping SQL UUIDs to UUID from the crate. for ID column
    "chrono", # maps timestamptz to DateTime<T> from the chrono crate
    "migrate" # access to sqlx migrate functions within code. useful for test suite.
    ]

[target.x86_64-pc-windows-msvc]
rustflags = ["-C", "link-arg=-fuse-ld=lld"]
